{"results": {"test_pep8.Test": {"failures": {"test_pep8.Test.test_pep8": {"message": "66 != 0 : Found code style errors (and warnings):\nE303: too many blank lines (2) (6)\nE265: block comment should start with '# ' (57)\nE225: missing whitespace around operator (1)\nE231: missing whitespace after ',' (2)", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_pep8.py\", line 19, in test_pep8\n    self.assertEqual(result.total_errors, 0, report_output)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 66 != 0 : Found code style errors (and warnings):\nE303: too many blank lines (2) (6)\nE265: block comment should start with '# ' (57)\nE225: missing whitespace around operator (1)\nE231: missing whitespace after ',' (2)\n"}}}, "test_a1.TestA1": {"errors": {"test_a1.TestA1.test_add_matrix_defaults": {"message": "'NoneType' object has no attribute 'get_val'", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 371, in test_add_matrix_defaults\n    self.assertEqual(r.get_val(1, 1), 3, \"adding 2 matrices not producing correct default values\")\n\nAttributeError: 'NoneType' object has no attribute 'get_val'\n"}, "test_a1.TestA1.test_matrix_mult": {"message": "'NoneType' object has no attribute 'get_val'", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 439, in test_matrix_mult\n    self.assertEqual(r.get_val(0, 0), 4, \"multiplying matrices not producing correct values\")\n\nAttributeError: 'NoneType' object has no attribute 'get_val'\n"}, "test_a1.TestA1.test_symmetric_matrix": {"message": "set_val() takes 3 positional arguments but 4 were given", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 501, in test_symmetric_matrix\n    m1.set_val(1, 2, 9)\n\nTypeError: set_val() takes 3 positional arguments but 4 were given\n"}, "test_a1.TestA1.test_identity_invalid": {"message": "set_val() takes 3 positional arguments but 4 were given", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 547, in test_identity_invalid\n    m = a1.IdentityMatrix(3)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 498, in __init__\n    self.set_diagonal(identity_oneD)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 509, in set_diagonal\n    new_diagonal.get_item(row))\n\nTypeError: set_val() takes 3 positional arguments but 4 were given\n"}, "test_a1.TestA1.test_get_val_index_error": {"message": "", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 77, in test_get_val_index_error\n    m.get_val(4, 4)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 131, in get_val\n    raise MatrixDimensionError\n\na1.MatrixDimensionError\n"}, "test_a1.TestA1.test_identity": {"message": "set_val() takes 3 positional arguments but 4 were given", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 535, in test_identity\n    m = a1.IdentityMatrix(3)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 498, in __init__\n    self.set_diagonal(identity_oneD)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 509, in set_diagonal\n    new_diagonal.get_item(row))\n\nTypeError: set_val() takes 3 positional arguments but 4 were given\n"}, "test_a1.TestA1.test_set_val_index_error": {"message": "", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 189, in test_set_val_index_error\n    m.set_val(5, 5, 9)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 151, in set_val\n    raise MatrixDimensionError\n\na1.MatrixDimensionError\n"}, "test_a1.TestA1.test_add_matrix_set_nodes": {"message": "'NoneType' object has no attribute 'get_val'", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 401, in test_add_matrix_set_nodes\n    self.assertEqual(r.get_val(1, 1), 3, \"adding 2 matrices not producing correct matrix\")\n\nAttributeError: 'NoneType' object has no attribute 'get_val'\n"}, "test_a1.TestA1.test_diagonal_matrix": {"message": "set_val() takes 3 positional arguments but 4 were given", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 513, in test_diagonal_matrix\n    m1.set_val(1, 1, 9)\n\nTypeError: set_val() takes 3 positional arguments but 4 were given\n"}, "test_a1.TestA1.test_identity_invalid_2": {"message": "set_val() takes 3 positional arguments but 4 were given", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 557, in test_identity_invalid_2\n    m = a1.IdentityMatrix(3)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 498, in __init__\n    self.set_diagonal(identity_oneD)\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/a1.py\", line 509, in set_diagonal\n    new_diagonal.get_item(row))\n\nTypeError: set_val() takes 3 positional arguments but 4 were given\n"}}, "passes": {"test_a1.TestA1.test_get_col_values": "", "test_a1.TestA1.test_add_scalar_2": "", "test_a1.TestA1.test_get_col_type": "", "test_a1.TestA1.test_get_col_1d": "", "test_a1.TestA1.test_get_row_values": "", "test_a1.TestA1.test_diagonal_invalid": "", "test_a1.TestA1.test_diagonal": "", "test_a1.TestA1.test_transpose": "", "test_a1.TestA1.test_get_val": "", "test_a1.TestA1.test_set_val_nodes_3": "", "test_a1.TestA1.test_set_val": "", "test_a1.TestA1.test_get_row_type": "", "test_a1.TestA1.test_get_set_row": "", "test_a1.TestA1.test_get_row_set_col": "", "test_a1.TestA1.test_add_scalar": ""}, "failures": {"test_a1.TestA1.test_add_matrix_defaults_unchanged": {"message": "0 != 1 : adding 2 matrices should not change original matrices", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 383, in test_add_matrix_defaults_unchanged\n    self.assertEqual(m1.get_val(1, 1), 1, \"adding 2 matrices should not change original matrices\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 1 : adding 2 matrices should not change original matrices\n"}, "test_a1.TestA1.test_set_val_nodes_6": {"message": "0 != 11 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 143, in test_set_val_nodes_6\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 11, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_matrix_mult_dimensions": {"message": "MatrixDimensionError not raised", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 457, in test_matrix_mult_dimensions\n    r = m1.multiply_matrix(m2)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 181, in __exit__\n    self._raiseFailure(\"{} not raised\".format(exc_name))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 130, in _raiseFailure\n    raise self.test_case.failureException(msg)\n\nAssertionError: MatrixDimensionError not raised\n"}, "test_a1.TestA1.test_add_scalar_default_2": {"message": "<a1.MatrixNode object at 0x7f0b9b00a6a0> != None : adding a scalar shouldn't create any nodes", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 357, in test_add_scalar_default_2\n    self.assertEqual(m._head._right, None, \"adding a scalar shouldn't create any nodes\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b00a6a0> != None : adding a scalar shouldn't create any nodes\n"}, "test_a1.TestA1.test_set_val_nodes_5": {"message": "0 != 11 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 135, in test_set_val_nodes_5\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 11, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_set_val_default_nodes": {"message": "<a1.MatrixNode object at 0x7f0b9b026588> != None : setting a cell to the default value should not create a new node", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 165, in test_set_val_default_nodes\n    self.assertEqual(m._head._right, None, \"setting a cell to the default value should not create a new node\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b026588> != None : setting a cell to the default value should not create a new node\n"}, "test_a1.TestA1.test_set_val_deleting_nodes": {"message": "<a1.MatrixNode object at 0x7f0b9b026e48> != None : setting a node back to default value not deleting the node", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 201, in test_set_val_deleting_nodes\n    self.assertEqual(m._head._right, None, \"setting a node back to default value not deleting the node\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b026e48> != None : setting a node back to default value not deleting the node\n"}, "test_a1.TestA1.test_set_val_nodes_1": {"message": "0 != 9 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 99, in test_set_val_nodes_1\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 9, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 9 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_add_matrix_dimensions": {"message": "MatrixDimensionError not raised", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 413, in test_add_matrix_dimensions\n    r = m1.add_matrix(m2)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 181, in __exit__\n    self._raiseFailure(\"{} not raised\".format(exc_name))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 130, in _raiseFailure\n    raise self.test_case.failureException(msg)\n\nAssertionError: MatrixDimensionError not raised\n"}, "test_a1.TestA1.test_set_val_nodes_4": {"message": "0 != 11 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 128, in test_set_val_nodes_4\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 11, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_init": {"message": "<a1.MatrixNode object at 0x7f0b9b024080> != None : Initializing a matrix creates more than 1 node", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 47, in test_init\n    self.assertEqual(m._head._right, None, \"Initializing a matrix creates more than 1 node\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b024080> != None : Initializing a matrix creates more than 1 node\n"}, "test_a1.TestA1.test_set_val_nodes_8": {"message": "0 != 11 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 157, in test_set_val_nodes_8\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 11, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_set_val_nodes_7": {"message": "0 != 11 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 150, in test_set_val_nodes_7\n    self.assertEqual(m._head.get_right().get_down().get_contents(), 11, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_add_scalar_default": {"message": "<a1.MatrixNode object at 0x7f0b9b00a3c8> != None : adding a scalar shouldn't create any nodes", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 345, in test_add_scalar_default\n    self.assertEqual(m._head._right, None, \"adding a scalar shouldn't create any nodes\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b00a3c8> != None : adding a scalar shouldn't create any nodes\n"}, "test_a1.TestA1.test_get_val_default": {"message": "0 != 9 : Matrix created with default value not returning that value for get_val", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 67, in test_get_val_default\n    self.assertEqual(m.get_val(1,1), 9, \"Matrix created with default value not returning that value for get_val\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 9 : Matrix created with default value not returning that value for get_val\n"}, "test_a1.TestA1.test_set_val_default_nodes_2": {"message": "<a1.MatrixNode object at 0x7f0b9b0269b0> != None : setting a cell to the default value should not create a new node", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 177, in test_set_val_default_nodes_2\n    self.assertEqual(m._head._right, None, \"setting a cell to the default value should not create a new node\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b0269b0> != None : setting a cell to the default value should not create a new node\n"}, "test_a1.TestA1.test_set_val_nodes_2": {"message": "0 != 10 : set_val not setting the correct node interally, are you creating every single node?", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 109, in test_set_val_nodes_2\n    self.assertEqual(m._head.get_right().get_right().get_down().get_contents(), 10, \"set_val not setting the correct node interally, are you creating every single node?\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 0 != 10 : set_val not setting the correct node interally, are you creating every single node?\n"}, "test_a1.TestA1.test_set_val_deleting_nodes_2": {"message": "<a1.MatrixNode object at 0x7f0b9b02b320> != None : setting a node back to default value not deleting the node", "description": "", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadar2/a1p2/test_a1.py\", line 213, in test_set_val_deleting_nodes_2\n    self.assertEqual(m._head._right, None, \"setting a node back to default value not deleting the node\")\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: <a1.MatrixNode object at 0x7f0b9b02b320> != None : setting a node back to default value not deleting the node\n"}}}}, "origin": "/home/a08test/submissions/ahmadar2/a1p2", "date": "2016-03-12T23:59:30", "assignment": "a1p2", "students": [{"student_id": "ahmadar2", "email": "arsalank.ahmad@mail.utoronto.ca", "last": "Ahmad", "source": "N/A", "first": "Arsalan", "student_number": "0000000000", "section": "N/A"}]}