Autotested Results for a1p2 submitted by Arsalan Ahmad (ahmadar2)
Generated at 2016-03-12T23:59:30

Summary of Results: 15 out of 44 tests successfully passed
--

Tests for test_a1.TestA1 (15/43 passed)
--

1) test_a1.TestA1.test_set_val                                                        .. ok!
2) test_a1.TestA1.test_get_col_type                                                   .. ok!
3) test_a1.TestA1.test_add_scalar_2                                                   .. ok!
4) test_a1.TestA1.test_get_row_set_col                                                .. ok!
5) test_a1.TestA1.test_add_scalar                                                     .. ok!
6) test_a1.TestA1.test_get_set_row                                                    .. ok!
7) test_a1.TestA1.test_transpose                                                      .. ok!
8) test_a1.TestA1.test_set_val_nodes_3                                                .. ok!
9) test_a1.TestA1.test_diagonal                                                       .. ok!
10) test_a1.TestA1.test_diagonal_invalid                                               .. ok!
11) test_a1.TestA1.test_get_row_type                                                   .. ok!
12) test_a1.TestA1.test_get_row_values                                                 .. ok!
13) test_a1.TestA1.test_get_col_values                                                 .. ok!
14) test_a1.TestA1.test_get_val                                                        .. ok!
15) test_a1.TestA1.test_get_col_1d                                                     .. ok!
16) test_a1.TestA1.test_set_val_deleting_nodes                                         .. failed
.. because <a1.MatrixNode object at 0x7f0b9b026e48> != None : setting a node back to default value not deleting the node (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 201, in test_set_val_deleting_nodes
        self.assertEqual(m._head._right, None, "setting a node back to default value not deleting the node")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b026e48> != None : setting a node back to default value not deleting the node

17) test_a1.TestA1.test_set_val_default_nodes                                          .. failed
.. because <a1.MatrixNode object at 0x7f0b9b026588> != None : setting a cell to the default value should not create a new node (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 165, in test_set_val_default_nodes
        self.assertEqual(m._head._right, None, "setting a cell to the default value should not create a new node")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b026588> != None : setting a cell to the default value should not create a new node

18) test_a1.TestA1.test_set_val_deleting_nodes_2                                       .. failed
.. because <a1.MatrixNode object at 0x7f0b9b02b320> != None : setting a node back to default value not deleting the node (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 213, in test_set_val_deleting_nodes_2
        self.assertEqual(m._head._right, None, "setting a node back to default value not deleting the node")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b02b320> != None : setting a node back to default value not deleting the node

19) test_a1.TestA1.test_set_val_nodes_8                                                .. failed
.. because 0 != 11 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 157, in test_set_val_nodes_8
        self.assertEqual(m._head.get_right().get_down().get_contents(), 11, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?

20) test_a1.TestA1.test_add_scalar_default                                             .. failed
.. because <a1.MatrixNode object at 0x7f0b9b00a3c8> != None : adding a scalar shouldn't create any nodes (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 345, in test_add_scalar_default
        self.assertEqual(m._head._right, None, "adding a scalar shouldn't create any nodes")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b00a3c8> != None : adding a scalar shouldn't create any nodes

21) test_a1.TestA1.test_add_scalar_default_2                                           .. failed
.. because <a1.MatrixNode object at 0x7f0b9b00a6a0> != None : adding a scalar shouldn't create any nodes (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 357, in test_add_scalar_default_2
        self.assertEqual(m._head._right, None, "adding a scalar shouldn't create any nodes")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b00a6a0> != None : adding a scalar shouldn't create any nodes

22) test_a1.TestA1.test_set_val_nodes_2                                                .. failed
.. because 0 != 10 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 109, in test_set_val_nodes_2
        self.assertEqual(m._head.get_right().get_right().get_down().get_contents(), 10, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 10 : set_val not setting the correct node interally, are you creating every single node?

23) test_a1.TestA1.test_add_matrix_defaults_unchanged                                  .. failed
.. because 0 != 1 : adding 2 matrices should not change original matrices (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 383, in test_add_matrix_defaults_unchanged
        self.assertEqual(m1.get_val(1, 1), 1, "adding 2 matrices should not change original matrices")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 1 : adding 2 matrices should not change original matrices

24) test_a1.TestA1.test_init                                                           .. failed
.. because <a1.MatrixNode object at 0x7f0b9b024080> != None : Initializing a matrix creates more than 1 node (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 47, in test_init
        self.assertEqual(m._head._right, None, "Initializing a matrix creates more than 1 node")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b024080> != None : Initializing a matrix creates more than 1 node

25) test_a1.TestA1.test_get_val_default                                                .. failed
.. because 0 != 9 : Matrix created with default value not returning that value for get_val (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 67, in test_get_val_default
        self.assertEqual(m.get_val(1,1), 9, "Matrix created with default value not returning that value for get_val")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 9 : Matrix created with default value not returning that value for get_val

26) test_a1.TestA1.test_add_matrix_dimensions                                          .. failed
.. because MatrixDimensionError not raised (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 413, in test_add_matrix_dimensions
        r = m1.add_matrix(m2)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 181, in __exit__
        self._raiseFailure("{} not raised".format(exc_name))
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 130, in _raiseFailure
        raise self.test_case.failureException(msg)
    
    AssertionError: MatrixDimensionError not raised

27) test_a1.TestA1.test_set_val_nodes_6                                                .. failed
.. because 0 != 11 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 143, in test_set_val_nodes_6
        self.assertEqual(m._head.get_right().get_down().get_contents(), 11, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?

28) test_a1.TestA1.test_set_val_nodes_7                                                .. failed
.. because 0 != 11 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 150, in test_set_val_nodes_7
        self.assertEqual(m._head.get_right().get_down().get_contents(), 11, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?

29) test_a1.TestA1.test_set_val_nodes_4                                                .. failed
.. because 0 != 11 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 128, in test_set_val_nodes_4
        self.assertEqual(m._head.get_right().get_down().get_contents(), 11, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?

30) test_a1.TestA1.test_set_val_nodes_5                                                .. failed
.. because 0 != 11 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 135, in test_set_val_nodes_5
        self.assertEqual(m._head.get_right().get_down().get_contents(), 11, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 11 : set_val not setting the correct node interally, are you creating every single node?

31) test_a1.TestA1.test_matrix_mult_dimensions                                         .. failed
.. because MatrixDimensionError not raised (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 457, in test_matrix_mult_dimensions
        r = m1.multiply_matrix(m2)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 181, in __exit__
        self._raiseFailure("{} not raised".format(exc_name))
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 130, in _raiseFailure
        raise self.test_case.failureException(msg)
    
    AssertionError: MatrixDimensionError not raised

32) test_a1.TestA1.test_set_val_default_nodes_2                                        .. failed
.. because <a1.MatrixNode object at 0x7f0b9b0269b0> != None : setting a cell to the default value should not create a new node (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 177, in test_set_val_default_nodes_2
        self.assertEqual(m._head._right, None, "setting a cell to the default value should not create a new node")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: <a1.MatrixNode object at 0x7f0b9b0269b0> != None : setting a cell to the default value should not create a new node

33) test_a1.TestA1.test_set_val_nodes_1                                                .. failed
.. because 0 != 9 : set_val not setting the correct node interally, are you creating every single node? (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 99, in test_set_val_nodes_1
        self.assertEqual(m._head.get_right().get_down().get_contents(), 9, "set_val not setting the correct node interally, are you creating every single node?")
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 0 != 9 : set_val not setting the correct node interally, are you creating every single node?

34) test_a1.TestA1.test_diagonal_matrix                                                .. error
.. because set_val() takes 3 positional arguments but 4 were given (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 513, in test_diagonal_matrix
        m1.set_val(1, 1, 9)
    
    TypeError: set_val() takes 3 positional arguments but 4 were given

35) test_a1.TestA1.test_identity                                                       .. error
.. because set_val() takes 3 positional arguments but 4 were given (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 535, in test_identity
        m = a1.IdentityMatrix(3)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 498, in __init__
        self.set_diagonal(identity_oneD)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 509, in set_diagonal
        new_diagonal.get_item(row))
    
    TypeError: set_val() takes 3 positional arguments but 4 were given

36) test_a1.TestA1.test_add_matrix_defaults                                            .. error
.. because 'NoneType' object has no attribute 'get_val' (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 371, in test_add_matrix_defaults
        self.assertEqual(r.get_val(1, 1), 3, "adding 2 matrices not producing correct default values")
    
    AttributeError: 'NoneType' object has no attribute 'get_val'

37) test_a1.TestA1.test_add_matrix_set_nodes                                           .. error
.. because 'NoneType' object has no attribute 'get_val' (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 401, in test_add_matrix_set_nodes
        self.assertEqual(r.get_val(1, 1), 3, "adding 2 matrices not producing correct matrix")
    
    AttributeError: 'NoneType' object has no attribute 'get_val'

38) test_a1.TestA1.test_identity_invalid                                               .. error
.. because set_val() takes 3 positional arguments but 4 were given (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 547, in test_identity_invalid
        m = a1.IdentityMatrix(3)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 498, in __init__
        self.set_diagonal(identity_oneD)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 509, in set_diagonal
        new_diagonal.get_item(row))
    
    TypeError: set_val() takes 3 positional arguments but 4 were given

39) test_a1.TestA1.test_matrix_mult                                                    .. error
.. because 'NoneType' object has no attribute 'get_val' (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 439, in test_matrix_mult
        self.assertEqual(r.get_val(0, 0), 4, "multiplying matrices not producing correct values")
    
    AttributeError: 'NoneType' object has no attribute 'get_val'

40) test_a1.TestA1.test_get_val_index_error                                            .. error
.. because  (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 77, in test_get_val_index_error
        m.get_val(4, 4)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 131, in get_val
        raise MatrixDimensionError
    
    a1.MatrixDimensionError

41) test_a1.TestA1.test_identity_invalid_2                                             .. error
.. because set_val() takes 3 positional arguments but 4 were given (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 557, in test_identity_invalid_2
        m = a1.IdentityMatrix(3)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 498, in __init__
        self.set_diagonal(identity_oneD)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 509, in set_diagonal
        new_diagonal.get_item(row))
    
    TypeError: set_val() takes 3 positional arguments but 4 were given

42) test_a1.TestA1.test_set_val_index_error                                            .. error
.. because  (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 189, in test_set_val_index_error
        m.set_val(5, 5, 9)
    
      File "/home/a08test/submissions/ahmadar2/a1p2/a1.py", line 151, in set_val
        raise MatrixDimensionError
    
    a1.MatrixDimensionError

43) test_a1.TestA1.test_symmetric_matrix                                               .. error
.. because set_val() takes 3 positional arguments but 4 were given (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_a1.py", line 501, in test_symmetric_matrix
        m1.set_val(1, 2, 9)
    
    TypeError: set_val() takes 3 positional arguments but 4 were given



Tests for test_pep8.Test (0/1 passed)
--

1) test_pep8.Test.test_pep8                                                           .. failed
.. because 66 != 0 : Found code style errors (and warnings):
E303: too many blank lines (2) (6)
E265: block comment should start with '# ' (57)
E225: missing whitespace around operator (1)
E231: missing whitespace after ',' (2) (details below):

    Traceback (most recent call last):
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 58, in testPartExecutor
        yield
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 577, in run
        testMethod()
    
      File "/home/a08test/submissions/ahmadar2/a1p2/test_pep8.py", line 19, in test_pep8
        self.assertEqual(result.total_errors, 0, report_output)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 797, in assertEqual
        assertion_func(first, second, msg=msg)
    
      File "/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py", line 790, in _baseAssertEqual
        raise self.failureException(msg)
    
    AssertionError: 66 != 0 : Found code style errors (and warnings):
    E303: too many blank lines (2) (6)
    E265: block comment should start with '# ' (57)
    E225: missing whitespace around operator (1)
    E231: missing whitespace after ',' (2)



