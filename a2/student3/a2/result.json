{"origin": "/home/a08test/submissions/ahmadans/a2", "assignment": "a2", "students": [{"last": "Ahmad", "section": "N/A", "first": "Ansaf", "email": "ansaf.ahmad@mail.utoronto.ca", "student_id": "ahmadans", "source": "N/A", "student_number": "0000000000"}], "results": {"test_all_regex_perms.TestAllRegexPermutations": {"passes": {"test_all_regex_perms.TestAllRegexPermutations.test_long": "Correctly produces permutations of long regex?", "test_all_regex_perms.TestAllRegexPermutations.test_binary": "Correctly produces permutations of binary regexes?", "test_all_regex_perms.TestAllRegexPermutations.test_empty_results": "", "test_all_regex_perms.TestAllRegexPermutations.test_leaf": "Correctly produces unique permutation of leaf?"}}, "test_pep8.TestPEP8": {"failures": {"test_pep8.TestPEP8.test_pep8": {"description": "", "message": "5 != 0 : Found code style errors (and warnings):\nE501: line too long (82 > 80 characters) (5)", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_pep8.py\", line 19, in test_pep8\n    self.assertEqual(result.total_errors, 0, report_output)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 797, in assertEqual\n    assertion_func(first, second, msg=msg)\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 790, in _baseAssertEqual\n    raise self.failureException(msg)\n\nAssertionError: 5 != 0 : Found code style errors (and warnings):\nE501: line too long (82 > 80 characters) (5)\n"}}}, "test_regex_match.TestRegexMatch": {"passes": {"test_regex_match.TestRegexMatch.test_dot_bar_fail": "Correctly rejects near dot-bars?", "test_regex_match.TestRegexMatch.test_star_fail": "Correctly rejects near-stars?", "test_regex_match.TestRegexMatch.test_bar_star_fail": "Correctly rejects near bar-stars?", "test_regex_match.TestRegexMatch.test_dot_okay": "Correctly matches dotted regexes?", "test_regex_match.TestRegexMatch.test_bar_okay": "Correctly matches barred regexes?", "test_regex_match.TestRegexMatch.test_edge_empty_ok": "Correctly matches various matches of empty string?", "test_regex_match.TestRegexMatch.test_leaf_fail": "Correct rejects near-leaves?", "test_regex_match.TestRegexMatch.test_leaf_ok": "Correctly matches leaf regexes?", "test_regex_match.TestRegexMatch.test_star_okay": "Correctly matches starred regexes?", "test_regex_match.TestRegexMatch.test_dot_bar_ok": "Correctly matches dot-bar regexes?"}, "failures": {"test_regex_match.TestRegexMatch.test_bar_star_dot_ok": {"description": "Correctly matches bar-star-dot regexes?", "message": "False is not true : Rejects valid match: (StarTree(DotTree(BarTree(Leaf('0'), Leaf('2')), StarTree(Leaf('1')))), '0121210121')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 157, in test_bar_star_dot_ok\n    \"Rejects valid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 654, in assertTrue\n    raise self.failureException(msg)\n\nAssertionError: False is not true : Rejects valid match: (StarTree(DotTree(BarTree(Leaf('0'), Leaf('2')), StarTree(Leaf('1')))), '0121210121')\n"}, "test_regex_match.TestRegexMatch.test_bar_star_dot_fail": {"description": "Correctly rejects near bar-star-dots?", "message": "True is not false : Accepts invalid match: (BarTree(StarTree(Leaf('2')), DotTree(Leaf('1'), Leaf('0'))), '1')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 167, in test_bar_star_dot_fail\n    \"Accepts invalid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid match: (BarTree(StarTree(Leaf('2')), DotTree(Leaf('1'), Leaf('0'))), '1')\n"}, "test_regex_match.TestRegexMatch.test_dot_fail": {"description": "Correctly rejects near-dots?", "message": "True is not false : Accepts invalid match: (DotTree(Leaf('1'), Leaf('0')), '1')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 63, in test_dot_fail\n    \"Accepts invalid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid match: (DotTree(Leaf('1'), Leaf('0')), '1')\n"}, "test_regex_match.TestRegexMatch.test_dot_star_ok": {"description": "Correctly matches dot-star regexes?", "message": "False is not true : Rejects valid match: (StarTree(DotTree(Leaf('1'), StarTree(Leaf('0')))), '100110')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 123, in test_dot_star_ok\n    \"Rejects valid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 654, in assertTrue\n    raise self.failureException(msg)\n\nAssertionError: False is not true : Rejects valid match: (StarTree(DotTree(Leaf('1'), StarTree(Leaf('0')))), '100110')\n"}, "test_regex_match.TestRegexMatch.test_difficult_star": {"description": "Correct on difficult case for star (1|(1.2))*?", "message": "False is not true : Rejects valid match: (StarTree(BarTree(Leaf('1'), DotTree(Leaf('1'), Leaf('2')))), '11212')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 178, in test_difficult_star\n    \"Rejects valid match: {}\".format((r,s)))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 654, in assertTrue\n    raise self.failureException(msg)\n\nAssertionError: False is not true : Rejects valid match: (StarTree(BarTree(Leaf('1'), DotTree(Leaf('1'), Leaf('2')))), '11212')\n"}, "test_regex_match.TestRegexMatch.test_dot_star_fail": {"description": "Correctly rejects near dot-stars?", "message": "True is not false : Accepts invalid match: (StarTree(DotTree(Leaf('1'), Leaf('1'))), '111')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 131, in test_dot_star_fail\n    \"Accepts invalid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid match: (StarTree(DotTree(Leaf('1'), Leaf('1'))), '111')\n"}, "test_regex_match.TestRegexMatch.test_bar_star_ok": {"description": "Correctly matches bar-star regexes?", "message": "False is not true : Rejects valid match: (StarTree(BarTree(Leaf('2'), Leaf('1'))), '11212212212')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 139, in test_bar_star_ok\n    \"Rejects valid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 654, in assertTrue\n    raise self.failureException(msg)\n\nAssertionError: False is not true : Rejects valid match: (StarTree(BarTree(Leaf('2'), Leaf('1'))), '11212212212')\n"}, "test_regex_match.TestRegexMatch.test_bar_fail": {"description": "Correctly rejects near-bars?", "message": "True is not false : Accepts invalid match: (BarTree(Leaf('1'), Leaf('2')), '')", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_regex_match.py\", line 78, in test_bar_fail\n    \"Accepts invalid match: {}\".format(t))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid match: (BarTree(Leaf('1'), Leaf('2')), '')\n"}}}, "test_is_regex.TestIsRegex": {"passes": {"test_is_regex.TestIsRegex.test_star_ok": "Star regexes accepted?", "test_is_regex.TestIsRegex.test_dot_star_ok": "Dot-star regexes accepted?", "test_is_regex.TestIsRegex.test_bar_dot_ok": "Bar-dot regexes accepted?", "test_is_regex.TestIsRegex.test_dot_star_fail": "Dot-star-like non-regexes rejected?", "test_is_regex.TestIsRegex.test_bar": "Bar regexes accepted?", "test_is_regex.TestIsRegex.test_bar_dot_fail": "Bar-dot-line non-regexes rejected?", "test_is_regex.TestIsRegex.test_dot": "Dot regexes accepted?", "test_is_regex.TestIsRegex.test_leaf_ok": "Leaf regular expressions accepted?", "test_is_regex.TestIsRegex.test_bar_star_dot_ok": "Bar-star-dot regexes accepted?", "test_is_regex.TestIsRegex.test_dot_fail": "Dot-like non-regexes rejected?", "test_is_regex.TestIsRegex.test_bar_star_fail": "Bar-star-like non-regexes rejected?", "test_is_regex.TestIsRegex.test_bar_star_ok": "Bar-star regexes accepted?", "test_is_regex.TestIsRegex.test_bar_fail": "Bar-like non-regexes rejected?"}, "failures": {"test_is_regex.TestIsRegex.test_star_fail": {"description": "Star-like non-regexes rejected?", "message": "True is not false : Accepts invalid regex: (2*)", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_is_regex.py\", line 73, in test_star_fail\n    \"Accepts invalid regex: {}\".format(r))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid regex: (2*)\n"}, "test_is_regex.TestIsRegex.test_bar_star_dot_fail": {"description": "Bar-star-dot non-regexes rejected?", "message": "True is not false : Accepts invalid regex: ((0*|(1.2)))", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_is_regex.py\", line 137, in test_bar_star_dot_fail\n    \"Accepts invalid regex: {}\".format(r))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid regex: ((0*|(1.2)))\n"}, "test_is_regex.TestIsRegex.test_leaf_fail": {"description": "Leaf non-regexes rejected?", "message": "True is not false : Accepts invalid regex: (1)", "details": "Traceback (most recent call last):\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n\n  File \"/home/a08test/submissions/ahmadans/a2/test_is_regex.py\", line 31, in test_leaf_fail\n    \"Accepts invalid regex: {}\".format(r))\n\n  File \"/usr/local/cms/python-3.4.2/lib/python3.4/unittest/case.py\", line 648, in assertFalse\n    raise self.failureException(msg)\n\nAssertionError: True is not false : Accepts invalid regex: (1)\n"}}}, "test_build_regex_tree.TestBuildRegexTree": {"passes": {"test_build_regex_tree.TestBuildRegexTree.test_bar_dot": "Correctly builds bar-dot trees?", "test_build_regex_tree.TestBuildRegexTree.test_star": "Correctly builds star trees?", "test_build_regex_tree.TestBuildRegexTree.test_leaf": "Correctly builds leaves?", "test_build_regex_tree.TestBuildRegexTree.test_bar": "Correctly builds bar trees?", "test_build_regex_tree.TestBuildRegexTree.test_dot": "Correctly builds dot trees?"}}}, "date": "2016-04-01T02:39:24"}